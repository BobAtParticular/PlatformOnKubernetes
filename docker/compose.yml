name: platform-docker-sample

volumes:
  error-data:
    #external: true
  audit-data:
    #external: true
  learning-transport-data:
    external: true
  
services:
  error-instance:
    image: particular/servicecontrol:latest
    env_file: ../.env
    environment:
      RAVENDB_CONNECTIONSTRING: http://error-db:8080
      REMOTEINSTANCES: '[{"api_uri":"http://audit-instance:44444/api"}]'
    restart: unless-stopped
    depends_on:
      error-db:
        condition: service_healthy
      error-init:
        condition: service_completed_successfully
    volumes:
      - learning-transport-data:/transport

  error-db:
    image: particular/servicecontrol-ravendb:latest
    volumes:
      - error-data:/opt/RavenDB/config

  error-init:
    image: particular/servicecontrol:latest
    env_file: ../.env
    environment:
      RAVENDB_CONNECTIONSTRING: http://error-db:8080
    command: --setup
    depends_on:
      error-db:
        condition: service_healthy
    volumes:
      - learning-transport-data:/transport

  audit-instance:
    image: particular/servicecontrol-audit:latest
    env_file: ../.env
    environment:
      RAVENDB_CONNECTIONSTRING: http://audit-db:8080
    restart: unless-stopped
    depends_on:
      audit-db:
        condition: service_healthy
      error-instance:
        condition: service_healthy
      audit-init:
        condition: service_completed_successfully
    volumes:
      - learning-transport-data:/transport

  audit-db:
    image: particular/servicecontrol-ravendb:latest
    volumes:
      - audit-data:/opt/RavenDB/config

  audit-init:
    image: particular/servicecontrol-audit:latest
    env_file: ../.env
    environment:
      RAVENDB_CONNECTIONSTRING: http://audit-db:8080
    command: --setup
    depends_on:
      audit-db:
        condition: service_healthy
    volumes:
      - learning-transport-data:/transport

  monitoring-instance:
    image: particular/servicecontrol-monitoring:latest
    env_file: ../.env    
    restart: unless-stopped
    environment:
      - MONITORING_LOGLEVEL=Debug
    ports:
      - "33633:33633"
    depends_on:
      monitoring-init:
        condition: service_completed_successfully
    volumes:
      - learning-transport-data:/transport

  monitoring-init:
    image: particular/servicecontrol-monitoring:latest
    env_file: ../.env
    command: --setup
    volumes:
      - learning-transport-data:/transport

  servicepulse:
    image: particular/servicepulse:latest
    ports:
      - "9090:9090"
    environment:
      SERVICECONTROL_URL: http://error-instance:33333/api
      MONITORING_URLS: "['http://monitoring-instance:33633']"
    restart: unless-stopped
    depends_on:
      error-instance:
        condition: service_healthy
      monitoring-instance:
        condition: service_healthy

  sender:
    image: sender
    env_file: ../.env    
    depends_on:
      error-init:
        condition: service_completed_successfully
      audit-init:
        condition: service_completed_successfully
      monitoring-init:
        condition: service_completed_successfully
      sender-init:
        condition: service_completed_successfully
      receiver-init:
        condition: service_completed_successfully
    volumes:
      - learning-transport-data:/transport

  sender-init:
    image: sender
    env_file: ../.env
    command: --init
    volumes:
      - learning-transport-data:/transport

  receiver:
    image: receiver
    env_file: ../.env
    depends_on:
      error-init:
        condition: service_completed_successfully
      audit-init:
        condition: service_completed_successfully
      monitoring-init:
        condition: service_completed_successfully
      receiver-init:
        condition: service_completed_successfully
    volumes:
      - learning-transport-data:/transport

  receiver-init:
    image: receiver
    env_file: ../.env
    command: --init
    volumes:
      - learning-transport-data:/transport